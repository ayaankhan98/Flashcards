{"ast":null,"code":"import _toConsumableArray from\"/home/ayaankhan/react/flashcards/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/home/ayaankhan/react/flashcards/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ayaankhan/react/flashcards/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/ayaankhan/react/flashcards/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/ayaankhan/react/flashcards/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/ayaankhan/react/flashcards/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import CardEditor from'./cardeditor';import CardViewer from'./cardviewer';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));_this.switchMode=function(){_this.setState(function(state){return{editor:!state.editor};});};_this.addCard=function(front,back){_this.setState(function(state){return{cards:[].concat(_toConsumableArray(state.cards),[{front:front,back:back}])};});};_this.deleteCard=function(index){_this.setState(function(state){var cards=_toConsumableArray(state.cards);cards.splice(index,1);return{cards:cards};});};_this.state={editor:true,cards:[]};return _this;}_createClass(App,[{key:\"render\",value:function render(){if(this.state.editor){return React.createElement(CardEditor,{cards:this.state.cards,switchMode:this.switchMode,addCard:this.addCard,deleteCard:this.deleteCard});}else{return React.createElement(CardViewer,{cards:this.state.cards,switchMode:this.switchMode});}}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/home/ayaankhan/react/flashcards/src/App.js"],"names":["React","CardEditor","CardViewer","App","props","switchMode","setState","state","editor","addCard","front","back","cards","deleteCard","index","splice","Component"],"mappings":"wsBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,C,GAGMC,CAAAA,G,yEAEJ,aAAYC,KAAZ,CAAmB,qCACf,qEAAMA,KAAN,GADe,MAwBnBC,UAxBmB,CAwBN,UAAM,CACf,MAAKC,QAAL,CAAc,SAAAC,KAAK,QAAK,CACpBC,MAAM,CAAE,CAACD,KAAK,CAACC,MADK,CAAL,EAAnB,EAGH,CA5BkB,OA8BnBC,OA9BmB,CA8BT,SAACC,KAAD,CAAQC,IAAR,CAAiB,CACvB,MAAKL,QAAL,CAAc,SAAAC,KAAK,QAAK,CACpBK,KAAK,8BAAOL,KAAK,CAACK,KAAb,GAAmB,CAACF,KAAK,CAALA,KAAD,CAAQC,IAAI,CAAJA,IAAR,CAAnB,EADe,CAAL,EAAnB,EAGH,CAlCkB,OAoCnBE,UApCmB,CAoCN,SAACC,KAAD,CAAW,CACpB,MAAKR,QAAL,CAAc,SAAAC,KAAK,CAAI,CACnB,GAAMK,CAAAA,KAAK,oBAAOL,KAAK,CAACK,KAAb,CAAX,CACAA,KAAK,CAACG,MAAN,CAAaD,KAAb,CAAmB,CAAnB,EACA,MAAO,CACHF,KAAK,CAAGA,KADL,CAAP,CAGH,CAND,EAOH,CA5CkB,CAEf,MAAKL,KAAL,CAAa,CACTC,MAAM,CAAG,IADA,CAETI,KAAK,CAAG,EAFC,CAAb,CAFe,aAMlB,C,uDAEQ,CACL,GAAI,KAAKL,KAAL,CAAWC,MAAf,CAAsB,CAClB,MAAQ,qBAAC,UAAD,EACI,KAAK,CAAI,KAAKD,KAAL,CAAWK,KADxB,CAEI,UAAU,CAAE,KAAKP,UAFrB,CAGI,OAAO,CAAE,KAAKI,OAHlB,CAII,UAAU,CAAI,KAAKI,UAJvB,EAAR,CAMH,CAPD,IAOO,CACH,MAAQ,qBAAC,UAAD,EACI,KAAK,CAAI,KAAKN,KAAL,CAAWK,KADxB,CAEI,UAAU,CAAE,KAAKP,UAFrB,EAAR,CAIH,CACJ,C,iBAxBeL,KAAK,CAACgB,S,EAiDxB,cAAeb,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport CardEditor from './cardeditor'\nimport CardViewer from './cardviewer'\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n      super(props)\n      this.state = {\n          editor : true,\n          cards : [],\n          }\n  }\n\n  render() {\n      if (this.state.editor){\n          return (<CardEditor \n                      cards = {this.state.cards}\n                      switchMode={this.switchMode}\n                      addCard={this.addCard}\n                      deleteCard = {this.deleteCard} \n                  />)\n      } else {\n          return (<CardViewer \n                      cards = {this.state.cards}\n                      switchMode={this.switchMode} \n                  />)\n      }\n  }\n\n  switchMode = () => {\n      this.setState(state => ({\n          editor: !state.editor,\n      }))\n  }\n\n  addCard = (front, back) => {\n      this.setState(state => ({\n          cards : [...state.cards,{front, back}],\n      }))\n  }\n\n  deleteCard = (index) => {\n      this.setState(state => {\n          const cards = [...state.cards]\n          cards.splice(index,1)\n          return {\n              cards : cards\n          }\n      })\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}